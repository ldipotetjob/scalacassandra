package com.ldg.dbconnection

=====================================================================

ref:
in the below site you can ask for an specific api, in our case we have ask for datastax api
http://www.programcreek.com/


===========================CONNECTION================================

This package is responsible for configuring the connection to the database:

object ConnConf is an Object that emulate a Singleton. We must create this object when de application
begin and kill it in 2 causes:

- When the application end
- When some error occurs that not let you connect to database

== case class Config ==> This class is use for pass host,keyspace,username and password for create the session. It is
                         just for the example, is recommended do that via ConfigFactory


In ConnConf object we add (now is commented) :

  private val config = ConfigFactory.load()

  private val hosts = config.getStringList("cassandra.host").toList
  private val keyspace = config.getString("cassandra.keyspace")
  private val username = config.getString("cassandra.username")
  private val password = config.getString("cassandra.password")

For recommendations of the datastax drivers specifications we must have more than one contact point.

We recommended ConfigFactory for read configuration files.


==> For create Session,Cluster we have used Either as an alternative to scala.Option because in this case we want to
    know why any process that we've started, has failed.

==> You only need to change the configuration file

==> four rules to follow when you use Cassandra dataStax dirvers:

    - Use one Cluster instance per (physical) cluster (per application lifetime).
    - Use at most one Session per keyspace, or use a single Session and explicitly specify
      the keyspace in your queries.
    - If you execute a statement more than once, consider using a PreparedStatement.
    - You can reduce the number of network roundtrips and also have atomic operations by using Batches.
